/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"AlbSchema","type":"object","properties":{"httpMethod":{"type":"string"},"path":{"type":"string"},"body":{"type":"string"},"isBase64Encoded":{"type":"boolean"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"queryStringParameters":{"type":"object","additionalProperties":{"type":"string"}},"requestContext":{"type":"object","properties":{"elb":{"type":"object","properties":{"targetGroupArn":{"type":"string"}},"required":["targetGroupArn"],"additionalProperties":true}},"required":["elb"],"additionalProperties":true}},"required":["body","httpMethod","isBase64Encoded","path","requestContext"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;let valid0 = true;for( missing0 of schema11.required){valid0 = data[missing0] !== undefined;if(!valid0){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;break;}}if(valid0){if(data.httpMethod !== undefined){const _errs2 = errors;if(typeof data.httpMethod !== "string"){validate10.errors = [{instancePath:instancePath+"/httpMethod",schemaPath:"#/properties/httpMethod/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs2 === errors;}else {var valid1 = true;}if(valid1){if(data.path !== undefined){const _errs4 = errors;if(typeof data.path !== "string"){validate10.errors = [{instancePath:instancePath+"/path",schemaPath:"#/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.body !== undefined){const _errs6 = errors;if(typeof data.body !== "string"){validate10.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data.isBase64Encoded !== undefined){const _errs8 = errors;if(typeof data.isBase64Encoded !== "boolean"){validate10.errors = [{instancePath:instancePath+"/isBase64Encoded",schemaPath:"#/properties/isBase64Encoded/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data.headers !== undefined){let data4 = data.headers;const _errs10 = errors;if(errors === _errs10){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){for(const key0 in data4){const _errs13 = errors;if(typeof data4[key0] !== "string"){validate10.errors = [{instancePath:instancePath+"/headers/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/headers/additionalProperties/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs13 === errors;if(!valid2){break;}}}else {validate10.errors = [{instancePath:instancePath+"/headers",schemaPath:"#/properties/headers/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data.queryStringParameters !== undefined){let data6 = data.queryStringParameters;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){for(const key1 in data6){const _errs18 = errors;if(typeof data6[key1] !== "string"){validate10.errors = [{instancePath:instancePath+"/queryStringParameters/" + key1.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/queryStringParameters/additionalProperties/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs18 === errors;if(!valid3){break;}}}else {validate10.errors = [{instancePath:instancePath+"/queryStringParameters",schemaPath:"#/properties/queryStringParameters/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}if(valid1){if(data.requestContext !== undefined){let data8 = data.requestContext;const _errs20 = errors;if(errors === _errs20){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing1;if((data8.elb === undefined) && (missing1 = "elb")){validate10.errors = [{instancePath:instancePath+"/requestContext",schemaPath:"#/properties/requestContext/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data8.elb !== undefined){let data9 = data8.elb;const _errs23 = errors;if(errors === _errs23){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing2;if((data9.targetGroupArn === undefined) && (missing2 = "targetGroupArn")){validate10.errors = [{instancePath:instancePath+"/requestContext/elb",schemaPath:"#/properties/requestContext/properties/elb/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data9.targetGroupArn !== undefined){if(typeof data9.targetGroupArn !== "string"){validate10.errors = [{instancePath:instancePath+"/requestContext/elb/targetGroupArn",schemaPath:"#/properties/requestContext/properties/elb/properties/targetGroupArn/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate10.errors = [{instancePath:instancePath+"/requestContext/elb",schemaPath:"#/properties/requestContext/properties/elb/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}}else {validate10.errors = [{instancePath:instancePath+"/requestContext",schemaPath:"#/properties/requestContext/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs20 === errors;}else {var valid1 = true;}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;