/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

export interface S3EventNotificationEventBridgeDetailSchema {
    version: string
    bucket: {
        name: string
    }
    object: {
        key: string
        size?: number | undefined
        etag?: string | undefined
        'version-id'?: string | undefined
        sequencer?: string | undefined
    }
    'request-id': string
    requester: string
    'source-ip-address'?: string | undefined
    reason?: string | undefined
    'deletion-type'?: string | undefined
    'restore-expiry-time'?: string | undefined
    'source-storage-class'?: string | undefined
    'destination-storage-class'?: string | undefined
    'destination-access-tier'?: string | undefined
}

export interface S3EventNotificationEventBridgeSchema {
    version: string
    id: string
    source: string
    account: string
    time: string
    region: string
    resources: string[]
    'detail-type': string
    detail: S3EventNotificationEventBridgeDetailSchema
    'replay-name'?: string | undefined
}

export interface S3EventRecordGlacierEventData {
    restoreEventData: {
        lifecycleRestorationExpiryTime: string
        lifecycleRestoreStorageClass: string
    }
}

export interface S3Identity {
    principalId: string
}

export interface S3Message {
    s3SchemaVersion: string
    configurationId: string
    object: {
        key: string
        size?: number | undefined
        urlDecodedKey?: string | undefined
        eTag?: string | undefined
        sequencer: string
        versionId?: string | undefined
    }
    bucket: {
        name: string
        ownerIdentity: S3Identity
        arn: string
    }
}

export interface S3RecordSchema {
    eventVersion: string
    eventSource: 'aws:s3'
    awsRegion: string
    eventTime: string
    eventName: string
    userIdentity: S3Identity
    requestParameters: S3RequestParameters
    responseElements: S3ResponseElements
    s3: S3Message
    glacierEventData?: S3EventRecordGlacierEventData | undefined
}

export interface S3RequestParameters {
    sourceIPAddress: string
}

export interface S3ResponseElements {
    'x-amz-request-id': string
    'x-amz-id-2': string
}

export interface S3Schema {
    Records: S3RecordSchema[]
}
