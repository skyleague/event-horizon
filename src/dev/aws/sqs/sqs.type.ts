/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import type { DefinedError, ValidateFunction } from 'ajv'

import { validate as SQSEventValidator } from './schemas/sqs-event.schema.js'
import { validate as SQSRecordValidator } from './schemas/sqs-record.schema.js'

export interface SQSEvent {
    Records: SQSRecord[]
}

export const SQSEvent = {
    validate: SQSEventValidator as ValidateFunction<SQSEvent>,
    get schema() {
        return SQSEvent.validate.schema
    },
    get errors() {
        return SQSEvent.validate.errors ?? undefined
    },
    is: (o: unknown): o is SQSEvent => SQSEvent.validate(o) === true,
    parse: (o: unknown): { right: SQSEvent } | { left: DefinedError[] } => {
        if (SQSEvent.is(o)) {
            return { right: o }
        }
        return { left: (SQSEvent.errors ?? []) as DefinedError[] }
    },
} as const

export interface SQSMessageAttribute {
    stringValue?: string | undefined
    binaryValue?: string | undefined
    stringListValues?: string[] | undefined
    binaryListValues?: string[] | undefined
    dataType: 'String' | 'Number' | 'Binary' | string
}

export interface SQSMessageAttributes {
    [k: string]: SQSMessageAttribute | undefined
}

export interface SQSRecord {
    messageId: string
    receiptHandle: string
    body: string
    attributes: SQSRecordAttributes
    messageAttributes: SQSMessageAttributes
    md5OfBody: string
    eventSource: string
    eventSourceARN: string
    awsRegion: string
}

export const SQSRecord = {
    validate: SQSRecordValidator as ValidateFunction<SQSRecord>,
    get schema() {
        return SQSRecord.validate.schema
    },
    get errors() {
        return SQSRecord.validate.errors ?? undefined
    },
    is: (o: unknown): o is SQSRecord => SQSRecord.validate(o) === true,
    parse: (o: unknown): { right: SQSRecord } | { left: DefinedError[] } => {
        if (SQSRecord.is(o)) {
            return { right: o }
        }
        return { left: (SQSRecord.errors ?? []) as DefinedError[] }
    },
} as const

export interface SQSRecordAttributes {
    AWSTraceHeader?: string | undefined
    ApproximateReceiveCount: string
    SentTimestamp: string
    SenderId: string
    ApproximateFirstReceiveTimestamp: string
    SequenceNumber?: string | undefined
    MessageGroupId?: string | undefined
    MessageDeduplicationId?: string | undefined
}
